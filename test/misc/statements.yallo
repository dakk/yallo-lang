function testFunction (a: int): int {
	let b: int = 12;
	let c: int = 12;
	failif(a>12);
	a * 512 + c
}

contract Test {
	entry testConst () {
		let b: int = 12;
		let c: int = b * 11;
		[]
	}
	entry testVar () {
		let b: int = 12;
		let c: int = 13;
		let (c: int, b: int list) = (12, [12]);
		[]
	}
	entry testAssign () {
		let bb: record { a: int };
		let b: int;
		bb.a = 199;
		[]
	}
	entry testCall () {
		let b: (int, int) map;
		b.update(235,"ciaomondo");
		this.b.update(12, 15);
		failwith("error");
		assert(12 > 14);
		[]
	}
	
	entry testReturn () {
		[]
	}
}