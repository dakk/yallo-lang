import "test/contract/token.yallo";

const tokenContractAddress: address = @KT1ThEdxfUcWUwqsdergy3QnbCWGHSUHeHJq;

contract usingAToken {
	entry checkBalance(a: address) {
		let op = IToken.of(tokenContractAddress).getBalance(a, this.checkBalanceCallback); 
		[op]
	}

	entry sendTezosInCall(a: address) {
		let op = Tezos.transfer (IToken.of(tokenContractAddress).getBalance, (a, this.checkBalanceCallback), 12mtz);
		[ op ]
	}

	entry sendTezosInCall2(a: address) {
		let getBalance: (address, nat contract) contract = Tezos.contract(tokenContractAddress, "getBalance") in
		let op = getBalance(a, this.checkBalanceCallback) in
		[ op ]
	}

	entry sendTezos(a: address) {
		let op = Tezos.transfer (a, 12mtz) in
		[ op ]
	}

	entry checkBalanceCallback(b: nat) {
		[]
	}
}